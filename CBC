/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>

using namespace std;


int main()
{
    int n;
    string str = '0111111' ;

    cin >> n;

    int p1[n], IV[n], enc[n], cipher[n], key[n];

    cout << "\n Enter IV : ";
    for (int i = 0; i < n; i++){
        cin >> IV[i];
    }
    
    cout << "\n IV : ";
    for (int i = 0; i < n; i++){
        cout << IV[i];
    }


    cout << "\n Enter Key  : ";
    for (int i = 0; i < n; i++){
        cin >> key[i];
    }
    cout << "\n Key  : ";
    for (int i = 0; i < n; i++){
        cout <<  key[i];
    }


    for (int i = 0; i < n;i++){
        cout << "\n Enter Plaintext : ";

        for (int i = 0; i < n; i++){
            cin >> p1[i];
        }
        
        cout << "\n Plaintext Entered : ";
            
        for (int i = 0; i < n; i++){
            cout << p1[i];
        }

        
        // IV Exor PT
        for (int i = 0; i< n; i++){
            enc[i] = p1[i] ^ IV[i];
        }
        cout << "\nPlaintext XOR IV : ";
            
        for (int i = 0; i < n; i++){
            cout << enc[i];
        }
        
        // Not ENC
        for (int i = 0; i < n; i++){
            enc[i] = !enc[i];
        }

        cout << "\n Not Enc : ";
            
        for (int i = 0; i < n; i++){
            cout << enc[i];
        }

        for (int i = 0; i < n; i++){
            cipher[i] = enc[i] ^ key[i];
        }
        
        cout << "\nCipher : ";
            
        for (int i = 0; i < n; i++){
            cout << cipher[i];
        }
        
        for (int i = 0; i < n; i++){
            IV[i] = cipher[i];
            str += cipher[i];
        }

        str += '100110101';
    }
 
    return 0;
}
